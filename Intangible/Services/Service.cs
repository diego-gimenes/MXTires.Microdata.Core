#region License
// Copyright (c) 2015 1010Tires.com
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
#endregion

using MXTires.Microdata.Core.Validators;
using Newtonsoft.Json;
namespace MXTires.Microdata.Core.Intangible
{
    /// <summary>
    /// Class Service.
    /// </summary>
    public class Service : Thing
    {
        /// <summary>
        /// ServiceChannel - A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
        /// </summary>
        /// <value>The available channel.</value>
        [JsonProperty("availableChannel")]
        public ServiceChannel AvailableChannel { get; set; }

        /// <summary>
        /// Thing - The tangible thing generated by the service, e.g. a passport, permit, etc.
        /// </summary>
        /// <value>The produces.</value>
        [JsonProperty("produces")]
        public Thing Produces { get; set; }

        /// <summary>
        /// The provider
        /// </summary>
        Thing provider;
        /// <summary>
        /// Person  or Organization - The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.
        /// </summary>
        /// <value>The provider.</value>
        [JsonProperty("provider")]
        public Thing Provider
        {
            get { return provider; }
            set
            {
                var validator = new TypeValidator(typeof(Organization), typeof(Person));
                validator.Validate(value);
                provider = value;
            }
        }

        /// <summary>
        /// AdministrativeArea 	The geographic area where the service is provided.
        /// </summary>
        /// <value>The service area.</value>
        [JsonProperty("serviceArea")]
        public AdministrativeArea ServiceArea { get; set; }

        /// <summary>
        /// Audience - The audience eligible for this service.
        /// </summary>
        /// <value>The service audience.</value>
        [JsonProperty("serviceAudience")]
        public Audience ServiceAudience { get; set; }

        /// <summary>
        /// Text - The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
        /// </summary>
        /// <value>The type of the service.</value>
        [JsonProperty("serviceType")]
        public string ServiceType { get; set; }
    }
}